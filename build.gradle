/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

// Define the main class for the application
mainClassName = 'hello'








task hello {
    doLast {
        println 'Hello world!'
    }
}

task upper {
    doLast {
        String someString = 'mY_nAmE'
        println "Original: $someString"
        println "Upper case: ${someString.toUpperCase()}"
    }
}

task count {
                doLast {
			 4.times { print "$it " }
			}
		}

task intro {

	dependsOn hello 
          doLast{
			println "i am gradle"
		}

}


task taskx {
		dependsOn 'tasky'
		doLast {
				println 'taskx'
			}
		}
task tasky {
		doLast{
		println 'tasky'
			}
		}







task taskA {
    doLast {
        println 'taskA'
    }
}
task taskB {
    doLast {
        println 'taskB'
    }
}
taskA.dependsOn taskB
taskB.shouldRunAfter taskA







task hi {
    doLast {
        println 'hello world'
    }
}

hello.onlyIf { !project.hasProperty('skipHello') }






//manipulating task
4.times { counter ->
    task "task$counter" {
        doLast {
            println "I'm task number $counter"
        }
    }
}
task0.dependsOn task2, task3
task1.dependsOn task3,task2


//DSL short cut notation
task hp {
	doLast{
		println 'hello hp'}
}
hp.doLast{
	println "greeting from the hp.name task"
}
